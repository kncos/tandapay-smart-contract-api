// Note: this is a build artifact .json generated by forge/solidity compiler, simply wrapped in `export const ... as const`. do not modify

export const FaucetTokenInfo = {
  abi: [
    { type: "constructor", inputs: [], stateMutability: "nonpayable" },
    {
      type: "function",
      name: "FAUCET_AMOUNT",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "allowance",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "approve",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "balanceOf",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decimals",
      inputs: [],
      outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "distribute",
      inputs: [
        { name: "recipient", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "faucet",
      inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "name",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "symbol",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transfer",
      inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferFrom",
      inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          name: "owner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "spender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          name: "from",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        { name: "to", type: "address", indexed: true, internalType: "address" },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "error",
      name: "ERC20InsufficientAllowance",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "allowance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InsufficientBalance",
      inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "balance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InvalidApprover",
      inputs: [{ name: "approver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidReceiver",
      inputs: [{ name: "receiver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSender",
      inputs: [{ name: "sender", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSpender",
      inputs: [{ name: "spender", type: "address", internalType: "address" }],
    },
  ],
  bytecode: {
    object:
      "0x608060405234801562000010575f80fd5b506040518060400160405280600b81526020016a2330bab1b2ba2a37b5b2b760a91b8152506040518060400160405280600381526020016246544b60e81b8152508160039081620000629190620002a3565b506004620000718282620002a3565b505050620000903369d3c21bcecceda10000006200009660201b60201c565b62000395565b6001600160a01b038216620000c55760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b620000d25f8383620000d6565b5050565b6001600160a01b03831662000104578060025f828254620000f891906200036f565b90915550620001769050565b6001600160a01b0383165f9081526020819052604090205481811015620001585760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000bc565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166200019457600280548290039055620001b2565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001f891815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200022e57607f821691505b6020821081036200024d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200029e57805f5260205f20601f840160051c810160208510156200027a5750805b601f840160051c820191505b818110156200029b575f815560010162000286565b50505b505050565b81516001600160401b03811115620002bf57620002bf62000205565b620002d781620002d0845462000219565b8462000253565b602080601f8311600181146200030d575f8415620002f55750858301515b5f19600386901b1c1916600185901b17855562000367565b5f85815260208120601f198616915b828110156200033d578886015182559484019460019091019084016200031c565b50858210156200035b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b808201808211156200038f57634e487b7160e01b5f52601160045260245ffd5b92915050565b6107b880620003a35f395ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013f578063766976401461016757806395d89b4114610177578063a9059cbb1461017f578063dd62ed3e14610192578063fb932108146101ca575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063579158971461012a575b5f80fd5b6100bd6101dd565b6040516100ca91906105fb565b60405180910390f35b6100e66100e1366004610662565b61026d565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461068a565b610286565b604051601281526020016100ca565b61013d6101383660046106c3565b6102a9565b005b6100fa61014d3660046106da565b6001600160a01b03165f9081526020819052604090205490565b6100fa683635c9adc5dea0000081565b6100bd6102b6565b6100e661018d366004610662565b6102c5565b6100fa6101a03660046106fa565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61013d6101d8366004610662565b6102d2565b6060600380546101ec9061072b565b80601f01602080910402602001604051908101604052809291908181526020018280546102189061072b565b80156102635780601f1061023a57610100808354040283529160200191610263565b820191905f5260205f20905b81548152906001019060200180831161024657829003601f168201915b5050505050905090565b5f3361027a8185856102e0565b60019150505b92915050565b5f336102938582856102f2565b61029e858585610372565b506001949350505050565b6102b333826103cf565b50565b6060600480546101ec9061072b565b5f3361027a818585610372565b6102dc82826103cf565b5050565b6102ed8383836001610403565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461036c578181101561035e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036c84848484035f610403565b50505050565b6001600160a01b03831661039b57604051634b637e8f60e11b81525f6004820152602401610355565b6001600160a01b0382166103c45760405163ec442f0560e01b81525f6004820152602401610355565b6102ed8383836104d5565b6001600160a01b0382166103f85760405163ec442f0560e01b81525f6004820152602401610355565b6102dc5f83836104d5565b6001600160a01b03841661042c5760405163e602df0560e01b81525f6004820152602401610355565b6001600160a01b03831661045557604051634a1406b160e11b81525f6004820152602401610355565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561036c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c791815260200190565b60405180910390a350505050565b6001600160a01b0383166104ff578060025f8282546104f49190610763565b9091555061056f9050565b6001600160a01b0383165f90815260208190526040902054818110156105515760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610355565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661058b576002805482900390556105a9565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ee91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156106275785810183015185820160400152820161060b565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461065d575f80fd5b919050565b5f8060408385031215610673575f80fd5b61067c83610647565b946020939093013593505050565b5f805f6060848603121561069c575f80fd5b6106a584610647565b92506106b360208501610647565b9150604084013590509250925092565b5f602082840312156106d3575f80fd5b5035919050565b5f602082840312156106ea575f80fd5b6106f382610647565b9392505050565b5f806040838503121561070b575f80fd5b61071483610647565b915061072260208401610647565b90509250929050565b600181811c9082168061073f57607f821691505b60208210810361075d57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561028057634e487b7160e01b5f52601160045260245ffdfea2646970667358221220ec494c0628f6e00c57f52b4d3ea42beab5a9be620b2ea0d84d26c79290b340c464736f6c63430008170033",
    sourceMap:
      "131:668:5:-:0;;;227:133;;;;;;;;;;1601:113:1;;;;;;;;;;;;;-1:-1:-1;;;1601:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:1;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;279:35:5::1;285:10;297:16;279:5;;;:35;;:::i;:::-;131:668:::0;;7458:208:1;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;2847:51:6;2820:18;;7572:32:1;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;3356:32:6;;6386:50:1;;;3338:51:6;3405:18;;;3398:34;;;3448:18;;;3441:34;;;3311:18;;6386:50:1;3136:345:6;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;3632::6;;3620:2;3605:18;;3486:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:6;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:6;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:6;;;2546:26;2497:89;-1:-1:-1;;1308:1:6;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:6;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:6;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2909:222::-;2974:9;;;2995:10;;;2992:133;;;3047:10;3042:3;3038:20;3035:1;3028:31;3082:4;3079:1;3072:15;3110:4;3107:1;3100:15;2992:133;2909:222;;;;:::o;3486:177::-;131:668:5;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013f578063766976401461016757806395d89b4114610177578063a9059cbb1461017f578063dd62ed3e14610192578063fb932108146101ca575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063579158971461012a575b5f80fd5b6100bd6101dd565b6040516100ca91906105fb565b60405180910390f35b6100e66100e1366004610662565b61026d565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e661011636600461068a565b610286565b604051601281526020016100ca565b61013d6101383660046106c3565b6102a9565b005b6100fa61014d3660046106da565b6001600160a01b03165f9081526020819052604090205490565b6100fa683635c9adc5dea0000081565b6100bd6102b6565b6100e661018d366004610662565b6102c5565b6100fa6101a03660046106fa565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61013d6101d8366004610662565b6102d2565b6060600380546101ec9061072b565b80601f01602080910402602001604051908101604052809291908181526020018280546102189061072b565b80156102635780601f1061023a57610100808354040283529160200191610263565b820191905f5260205f20905b81548152906001019060200180831161024657829003601f168201915b5050505050905090565b5f3361027a8185856102e0565b60019150505b92915050565b5f336102938582856102f2565b61029e858585610372565b506001949350505050565b6102b333826103cf565b50565b6060600480546101ec9061072b565b5f3361027a818585610372565b6102dc82826103cf565b5050565b6102ed8383836001610403565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461036c578181101561035e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036c84848484035f610403565b50505050565b6001600160a01b03831661039b57604051634b637e8f60e11b81525f6004820152602401610355565b6001600160a01b0382166103c45760405163ec442f0560e01b81525f6004820152602401610355565b6102ed8383836104d5565b6001600160a01b0382166103f85760405163ec442f0560e01b81525f6004820152602401610355565b6102dc5f83836104d5565b6001600160a01b03841661042c5760405163e602df0560e01b81525f6004820152602401610355565b6001600160a01b03831661045557604051634a1406b160e11b81525f6004820152602401610355565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561036c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c791815260200190565b60405180910390a350505050565b6001600160a01b0383166104ff578060025f8282546104f49190610763565b9091555061056f9050565b6001600160a01b0383165f90815260208190526040902054818110156105515760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610355565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661058b576002805482900390556105a9565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ee91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156106275785810183015185820160400152820161060b565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461065d575f80fd5b919050565b5f8060408385031215610673575f80fd5b61067c83610647565b946020939093013593505050565b5f805f6060848603121561069c575f80fd5b6106a584610647565b92506106b360208501610647565b9150604084013590509250925092565b5f602082840312156106d3575f80fd5b5035919050565b5f602082840312156106ea575f80fd5b6106f382610647565b9392505050565b5f806040838503121561070b575f80fd5b61071483610647565b915061072260208401610647565b90509250929050565b600181811c9082168061073f57607f821691505b60208210810361075d57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561028057634e487b7160e01b5f52601160045260245ffdfea2646970667358221220ec494c0628f6e00c57f52b4d3ea42beab5a9be620b2ea0d84d26c79290b340c464736f6c63430008170033",
    sourceMap:
      "131:668:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;3998:186:1;1004:187:6;2849:97:1;2927:12;;2849:97;;;1342:25:6;;;1330:2;1315:18;2849:97:1;1196:177:6;4776:244:1;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:6;;1841:2;1826:18;2707:82:1;1711:184:6;437:83:5;;;;;;:::i;:::-;;:::i;:::-;;3004:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;167:53:5;;207:13;167:53;;1981:93:1;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;692:105:5;;;;;;:::i;:::-;;:::i;1779:89:1:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;437:83:5:-;488:25;494:10;506:6;488:5;:25::i;:::-;437:83;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;692:105:5:-;766:24;772:9;783:6;766:5;:24::i;:::-;692:105;;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:1;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:1;;-1:-1:-1;;;;;3146:32:6;;10688:60:1;;;3128:51:6;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;10688:60:1;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10504:388;10415:477;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;3422:51:6;3395:18;;5517:30:1;3276:203:6;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;3422:51:6;3395:18;;5610:32:1;3276:203:6;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7458:208::-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;3422:51:6;3395:18;;7572:32:1;3276:203:6;7524:91:1;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;3422:51:6;3395:18;;9855:32:1;3276:203:6;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;3422:51:6;3395:18;;9955:31:1;3276:203:6;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1342:25:6;;1330:2;1315:18;;1196:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;3146:32:6;;6386:50:1;;;3128:51:6;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;6386:50:1;2926:345:6;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1342::6;;1330:2;1315:18;;1196:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:6;;1900:180;-1:-1:-1;1900:180:6:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:6:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;3484:222::-;3549:9;;;3570:10;;;3567:133;;;3622:10;3617:3;3613:20;3610:1;3603:31;3657:4;3654:1;3647:15;3685:4;3682:1;3675:15",
    linkReferences: {},
  },
  methodIdentifiers: {
    "FAUCET_AMOUNT()": "76697640",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "distribute(address,uint256)": "fb932108",
    "faucet(uint256)": "57915897",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"FAUCET_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"distribute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"faucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"distribute(address,uint256)":{"params":{"amount":"Amount of tokens to mint","recipient":"Address to receive tokens"}},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``\'s tokens of at least `value`."}},"version":1},"userdoc":{"kind":"user","methods":{"distribute(address,uint256)":{"notice":"Any wallet can distribute tokens to another address"},"faucet(uint256)":{"notice":"Any wallet can call this to mint tokens for themselves"}},"version":1}},"settings":{"compilationTarget":{"src/FaucetToken.sol":"FaucetToken"},"evmVersion":"shanghai","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b","license":"MIT","urls":["bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b","dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31","license":"MIT","urls":["bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09","dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","license":"MIT","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330","license":"MIT","urls":["bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf","dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"src/FaucetToken.sol":{"keccak256":"0xe3b8055d869f8f5ad99b58823c5a28fa30167baf50e1e39dcccd9b5ac360d7c1","license":"MIT","urls":["bzz-raw://41aa768ebbf2ae77d1eff0353bb2bd63ab531a4ad28bcb78ffb35c3717223841","dweb:/ipfs/QmXWLLfvk3BxyVQtJRtha3saqxW65SynwKRjD9PMe6mTYg"]}},"version":1}',
  metadata: {
    compiler: { version: "0.8.23+commit.f704f362" },
    language: "Solidity",
    output: {
      abi: [
        { inputs: [], stateMutability: "nonpayable", type: "constructor" },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "allowance", type: "uint256" },
            { internalType: "uint256", name: "needed", type: "uint256" },
          ],
          type: "error",
          name: "ERC20InsufficientAllowance",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "uint256", name: "balance", type: "uint256" },
            { internalType: "uint256", name: "needed", type: "uint256" },
          ],
          type: "error",
          name: "ERC20InsufficientBalance",
        },
        {
          inputs: [
            { internalType: "address", name: "approver", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidApprover",
        },
        {
          inputs: [
            { internalType: "address", name: "receiver", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidReceiver",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidSender",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidSpender",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "FAUCET_AMOUNT",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "allowance",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "account", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "decimals",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        },
        {
          inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "distribute",
        },
        {
          inputs: [
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "faucet",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "totalSupply",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transfer",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "allowance(address,address)": { details: "See {IERC20-allowance}." },
          "approve(address,uint256)": {
            details:
              "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.",
          },
          "balanceOf(address)": { details: "See {IERC20-balanceOf}." },
          "decimals()": {
            details:
              "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
          },
          "distribute(address,uint256)": {
            params: {
              amount: "Amount of tokens to mint",
              recipient: "Address to receive tokens",
            },
          },
          "name()": { details: "Returns the name of the token." },
          "symbol()": {
            details:
              "Returns the symbol of the token, usually a shorter version of the name.",
          },
          "totalSupply()": { details: "See {IERC20-totalSupply}." },
          "transfer(address,uint256)": {
            details:
              "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.",
          },
          "transferFrom(address,address,uint256)": {
            details:
              "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.",
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {
          "distribute(address,uint256)": {
            notice: "Any wallet can distribute tokens to another address",
          },
          "faucet(uint256)": {
            notice: "Any wallet can call this to mint tokens for themselves",
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ],
      optimizer: { enabled: true, runs: 200 },
      metadata: { bytecodeHash: "ipfs" },
      compilationTarget: { "src/FaucetToken.sol": "FaucetToken" },
      evmVersion: "shanghai",
      libraries: {},
    },
    sources: {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        keccak256:
          "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        urls: [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        keccak256:
          "0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31",
        urls: [
          "bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09",
          "dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        urls: [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
          urls: [
            "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
            "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        urls: [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF",
        ],
        license: "MIT",
      },
      "src/FaucetToken.sol": {
        keccak256:
          "0xe3b8055d869f8f5ad99b58823c5a28fa30167baf50e1e39dcccd9b5ac360d7c1",
        urls: [
          "bzz-raw://41aa768ebbf2ae77d1eff0353bb2bd63ab531a4ad28bcb78ffb35c3717223841",
          "dweb:/ipfs/QmXWLLfvk3BxyVQtJRtha3saqxW65SynwKRjD9PMe6mTYg",
        ],
        license: "MIT",
      },
    },
    version: 1,
  },
  id: 5,
} as const;
